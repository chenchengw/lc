    public int largestRectangleArea(int[] heights) {
        if (heights == null || heights.length ==0) return 0;
         Stack<Integer> stack = new Stack<>();
         int max = 0;
         //note that i <=heights.length
         for (int i = 0; i <= heights.length; i++) {
             //set cur to  -1, so that all the items are popped at last
             int cur = (i == heights.length) ? -1: heights[i];
             while (!stack.isEmpty() && cur <= heights[stack.peek()]) {
                 int h = heights[stack.pop()];
                 //in the round of the above example, stack.peek() == 1, i = 4
                 int w = stack.isEmpty() ? i : i - stack.peek() - 1;
                 max= Math.max(max, h*w);
             }
             stack.push(i);
         }
        return max;
    }
