public class NestedIterator implements Iterator<Integer> {

    Stack<NestedInteger> stack;
    
    public NestedIterator(List<NestedInteger> nestedList) {
        stack = new Stack<NestedInteger>();
        //starting from the last element because it is FILO
        for (int i = nestedList.size() - 1; i >=0; i--) {
            stack.push(nestedList.get(i));
        }
    }

    @Override
    public Integer next() {
       return stack.pop().getInteger();
    }

    @Override
    public boolean hasNext() {
        while (!stack.isEmpty()) {
            NestedInteger ni = stack.peek();
            if (ni.isInteger()) return true;
            stack.pop();
            //again from back to beginning
            for (int i = ni.getList().size() - 1; i >=0; i--) {
                stack.push(ni.getList().get(i));
            }
        }
        return false;
    }
}
