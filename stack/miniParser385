    public NestedInteger deserialize(String s) {
        Stack<NestedInteger> stack = new Stack<NestedInteger>();
        String temp = "";
        for(char c: s.toCharArray()){
        if (c == '[') {
                stack.push(new NestedInteger()); //start a new NI
        } else if (c == ']') {
                if(!temp.equals("")){
                    stack.peek().add(new NestedInteger(Integer.parseInt(temp))); //add NI to parent
                    temp="";
                }
 
                NestedInteger top = stack.pop();
                if(!stack.empty()){
                    stack.peek().add(top);
                }else{
                    return top;
                }
 
        } else if (c == ',') {
                if(!temp.equals("")){
                    stack.peek().add(new NestedInteger(Integer.parseInt(temp)));//add NI to parent
                    temp="";
                }
 
         } else {
                temp += c;
        }
    }
        if (!temp.equals("")) {
            return new NestedInteger(Integer.parseInt(temp));
        }
        return null;
    }
