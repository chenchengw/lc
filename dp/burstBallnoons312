    public int maxCoins(int[] nums) {
        int n = nums.length;
        int[] arr = new int[n+2];
        for(int i = 0; i < n; i++) {
            arr[i+1] = nums[i];
        }
        arr[0] = arr[n+1] = 1;
        int[][] dp = new int[n+2][n+2];
        
        for (int len = 1; len <=n; len++) {
            for (int start = 1; start<= n - len + 1; start++) {
                int end = start+len-1;
                for (int i = start; i <= end; i++) {
                    //i is the last ballnoon to burst, so its left ballnoon would be arr[start-1] and its right ballnoon would be arr[end+1]
                    dp[start][end] = Math.max(dp[start][end], dp[start][i-1] + arr[start-1]*arr[i]*arr[end+1] + dp[i+1][end]);
                }
            }
        }
        return dp[1][n];
    }
