    public boolean canPartition(int[] nums) {
        int sum = 0;
        for (int num: nums) {
            sum += num;
        }
        if (sum % 2 == 1) return false;
        sum /= 2;
        
        //find if there is a set that sums up to sum/2, the length of the array is sum/2
        // dp[i] = dp[i] || dp[i - nums[j]] (nums[j] < i)
        boolean[] dp = new boolean[sum+1];
        Arrays.fill(dp, false);
        dp[0] = true;
        for (int num: nums) {
          for (int i = sum; i >= num; i--) { 
               dp[i] = dp[i] || dp[i - num];
            }
        }
        return dp[sum];
    }
