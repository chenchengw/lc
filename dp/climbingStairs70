  //space: O(n)
  public int climbStairs(int n) {
       if (n == 0) return 0;
        
       int[] dp = new int[n+1];
       dp[0] = 1;
       dp[1] = 1;
       for (int i = 2; i <= n; i++) {
           dp[i] = dp[i-1] + dp[i-2];
       }
       return dp[n];
    }
    
    //space: O(1)
      //dp[i] = dp[i-1] + dp[i-2]
    public int climbStairs(int n) {
       if (n == 0) return 0;
        
       int[] dp = new int[3];
       dp[0] = 0;
       dp[1] = 1;
       dp[2] = 2;
       if (n < 3) return dp[n];
        
       for (int i = 2; i < n; i++) {
           dp[0] = dp[1];
           dp[1] = dp[2];
           dp[2] = dp[0] + dp[1];
       }
       return dp[2];
    }
