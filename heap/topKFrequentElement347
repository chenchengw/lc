  public List<Integer> topKFrequent(int[] nums, int k) {
        Map<Integer, Integer> hm = new HashMap<>();
        for (int n: nums) {
            hm.put(n, hm.getOrDefault(n, 0) + 1);
        }
        //max heap
        Queue<Map.Entry<Integer, Integer>> maxHeap = new PriorityQueue<>((a, b) -> (b.getValue() - a.getValue()));
        for(Map.Entry<Integer, Integer> entry: hm.entrySet()) {
            maxHeap.add(entry);
        }
        
        List<Integer> result = new ArrayList<Integer>();
        while (result.size() < k && !maxHeap.isEmpty()) {
            Map.Entry<Integer, Integer> entry = maxHeap.poll();
            result.add(entry.getKey());
        }
        
        return result;
    }
