    //time: O(KlgN), space: O(K)
    public int[] maxSlidingWindow(int[] nums, int k) {
        if (nums.length == 0) return new int[0];
        int[] result = new int[nums.length + 1 - k];
        Queue<Integer> pq = new PriorityQueue<Integer>((a, b) -> (b - a));
        for (int i = 0; i < nums.length; i++) {
            if (i >= k) {
               pq.remove(nums[i-k]); 
            }
            pq.offer(nums[i]);
            if (i + 1 >= k) {
                result[i + 1 - k] = pq.peek();
            }
        }
        return result;
    }
