  public static void main(String[] args) {
      int[][] matrix = new int[][]{{1,2,3}, {4,1,6}, {4,5,1}};
      largestBlock(matrix);
  }
           
  static void largestBlock(int[][] matrix) {
    boolean[][] visited = new boolean[matrix.length][matrix[0].length];
    int largest = 1;  
    for (int i = 0; i < matrix.length; i++) {
        for (int j = 0; j < matrix[0].length; j++) {
            if (matrix[i][j] != Integer.MAX_VALUE) {
              System.out.println(matrix[i][j]);
              int len = helper(matrix, i, j, matrix[i][j]);
              largest = Math.max(largest, len);
            }
        }
      }
     System.out.println("the largestBlock is" + largest);
  }
  
  static int helper(int[][] matrix, int x, int y, int val) {
        if (x < 0 || x == matrix.length || y < 0 || y == matrix[0].length || matrix[x][y] != val || matrix[x][y] == Integer.MAX_VALUE) {
          return 0;
        }
        int result = 1;
        matrix[x][y] = Integer.MAX_VALUE;

        result += helper(matrix, x-1, y, val);
        result += helper(matrix, x+1, y,  val);
        result += helper(matrix, x, y+1, val);
        result += helper(matrix, x, y-1, val);
    
        return result; 
  }
