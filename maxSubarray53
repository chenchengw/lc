//time: O(N), space: O(1)
//dp[i] = dp[i-1] > 0 ? dp[i-1] + nums[i]: nums[i]
public int maxSubArray(int[] nums) {
    if (nums.length == 0) return 0;
    int curSum = nums[0];
    int maxSum = nums[0];
    for (int i = 1; i < nums.length; i++) {
        curSum = curSum > 0 ? curSum + nums[i] : nums[i];
        maxSum = Math.max(curSum, maxSum);
    }
    return maxSum;
}
