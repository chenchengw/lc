    public List<String> removeInvalidParentheses(String s) {
        List<String> res = new ArrayList<>();
        
        Set<String> visited = new HashSet<>();
        Queue<String> q = new LinkedList<>();
        
        //initialize
        visited.add(s);
        q.offer(s);
        
        boolean found = false;
        while(!q.isEmpty()) {
            String str = q.poll();
            
            if (isValid(str)) {
                res.add(str);
                found = true;
            }
            
            //no need to generate parentheses at next level and add to the queue
            if (found == true) continue;
            
            for (int i = 0; i < str.length(); i++) {
                //don't forget this check 
                if (str.charAt(i) != '(' && str.charAt(i) != ')') continue;
                String newStr = str.substring(0, i) + str.substring(i+1);
                if (!visited.contains(newStr)) {
                    q.offer(newStr);
                    visited.add(newStr);
                }
            }
        }
        
        return res;
    }
    
    boolean isValid(String s) {
        int count = 0;
        for (char c: s.toCharArray()) {
            if (c == '(') {
                count++;
            } 
            if (c == ')') {
                 if (count == 0) return false;
                count--;           
            }
        }
        //note we should return count == 0 here
        return count == 0;
    }
