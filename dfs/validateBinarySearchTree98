    public boolean isValidBST(TreeNode root) {
       return helper(root, Long.MIN_VALUE, Long.MAX_VALUE);
    }
    
    //the triky part is to define the helper function in a way 
    // that can take both minVal and maxVal allowed for a node
    boolean helper(TreeNode root, long minVal, long maxVal) {
        if (root == null) return true;
        if (root.val >= maxVal || root.val <= minVal) return false;
        return helper(root.left, minVal, root.val) && helper(root.right, root.val, maxVal);
    }
    
    // in order traversal with global variable
   TreeNode prev = null;
    public boolean isValidBST(TreeNode root) {
        if (root == null) return true;
        if (!isValidBST(root.left)) return false;
        if (prev != null && root.val <= prev.val) return false;
        prev = root;
        if (!isValidBST(root.right)) return false;
        return true;
    }
