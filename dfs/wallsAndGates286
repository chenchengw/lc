    public void wallsAndGates(int[][] rooms) {
        int m = rooms.length;
        if (m == 0) return;
        int n = rooms[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (rooms[i][j] == 0) {
                    dfs(rooms, i, j, 0);
                }
            }
        }
    }
        
        
    void dfs(int[][] rooms, int i, int j, int prev) {
        if (i < 0 || i == rooms.length || j < 0 || j == rooms[0].length) {
            return;
        }
        if (rooms[i][j] >= prev ) {
            rooms[i][j] = prev;
            dfs(rooms, i+1, j, rooms[i][j]+1);
            dfs(rooms, i-1, j, rooms[i][j]+1);
            dfs(rooms, i, j+1, rooms[i][j]+1);
            dfs(rooms, i, j-1, rooms[i][j]+1);
        }
    }
