//time O(2^(h+1)-1) space: O(h)  
//h is the height of the tree
public List<String> binaryTreePaths(TreeNode root) {
    List<String> result = new ArrayList<String>();
    if (root == null) return result;
    dfs(root, "", result);
    return result;
}

public void dfs(TreeNode root, String path, List<String> result) {
    if (root == null) return;
    path += root.val;
    if (root.left == null && root.right == null) {
        result.add(path);
        return;
    }
    path += "->";
    dfs(root.left, path, result);
    dfs(root.right,path, result);
}
