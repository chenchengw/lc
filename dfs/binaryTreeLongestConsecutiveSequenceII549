    public int longestConsecutive(TreeNode root) {
        if (root == null) return 0;
        int res = helper(root, 1) + helper(root, -1) + 1;
        return Math.max(res, Math.max(longestConsecutive(root.left), longestConsecutive(root.right)));
    }
    
    int helper(TreeNode root, int diff) {
        if (root == null) return 0;
        int left = 0;
        if (root.left != null && root.val - root.left.val == diff) {
            left = 1 + helper(root.left, diff);
        }
        int right = 0;
        if (root.right != null && root.val - root.right.val == diff) {
            right = 1 + helper(root.right, diff);
        }
        return Math.max(left, right);
    }
