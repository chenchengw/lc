    public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList<>();
        helper(result, n, new StringBuilder(), 0, 0);
        return result;
    }
    
    void helper(List<String> result, int n, StringBuilder sb, int open, int close) {
        if (sb.length() == 2*n) {
            result.add(sb.toString());
            return;
        }
        if (open < n) {
            sb.append('(');
            helper(result, n, sb, open + 1, close);
            sb.deleteCharAt(sb.length()-1);
        } 
        if (close < open) {
            sb.append(')');
            helper(result, n, sb, open, close + 1);
            sb.deleteCharAt(sb.length()-1);
        }
    }
