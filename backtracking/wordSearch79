    public boolean exist(char[][] board, String word) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (search(board, i, j, word, 0) == true) return true;
            }
        }
        return false;
    }
    
    boolean search(char[][] board, int x, int y, String word, int start) {
        if (start == word.length()) {
            return true;
        }
        if (x < 0 || x == board.length || y < 0 || y == board[0].length || board[x][y] != word.charAt(start)) return false;
        //mark board[x][y] to avoid duplicate revisit
        board[x][y] ^= '$';
        boolean exist = search(board, x+1, y, word, start+1) || search(board, x-1, y, word, start+1) ||
            search(board, x, y+1, word, start+1) || search(board, x, y-1, word, start+1);
        //reset board[x][y] for next round of search
        board[x][y] ^= '$';
        return exist;
    }
