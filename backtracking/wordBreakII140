    public List<String> wordBreak(String s, List<String> wordDict) {
        Map<String, List<String>> hm = new HashMap<>();
        return dfs(s, wordDict, hm);
    }
    
    List<String> dfs(String s, List<String> wordDict, Map<String, List<String>> hm) {
        //pruning
        if (hm.containsKey(s)) return hm.get(s);
        
        List<String> res = new ArrayList<>();
        if (s.length() == 0) {
            res.add("");
            return res;
        }
        
        for (String word: wordDict) {
            if (s.startsWith(word)) {
                List<String> slist = dfs(s.substring(word.length()), wordDict, hm);
                for (String str: slist) {
                    if (str.length() == 0) {
                        res.add(word);
                    } else {
                        res.add(word + " " + str);
                    }
                }
            }
        }
        hm.put(s, res);
        return res;
    }
