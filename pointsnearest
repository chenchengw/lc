Description
Given a collection of two dimensional points and a number k, return the k closest points to (0,0) by Euclidean distance.
Question Statement
Alternative delivery of the question #

Find K closest planets to a star knowing the location of the star and all the planets in the system.
Given locations of shops and facebook user, return the k closest to the user


//max heap
class Solution {
  public static void main(String[] args) {
    List<Point> points = new ArrayList<>();
    points.add(new Point(1.0, 4.0));
    points.add(new Point(2.0, 3.0));
    points.add(new Point(1.0, 5.0));
    points.add(new Point(3.0, 2.0));
    
     findClosest(points, 2);
  }
  
  static void findClosest(List<Point> points, int k) {
    PriorityQueue<Point> pq = new PriorityQueue<Point>((a, b) -> ((int)b.getDist() - (int)a.getDist()));
    for (Point p: points) {
       if (pq.size() < k) {
         pq.offer(p);
       } else {
         Point q = pq.peek();
         if (p.getDist() < q.getDist()) {
           pq.poll();
           pq.offer(p);
         }
       }
    }
    
    while (!pq.isEmpty()) {
      Point p = pq.poll();
      System.out.println("x:" + p.x + " y:" + p.y);
    }
    
  }
  
  static class Point {
    double x;
    double y;
    public Point(double x, double y) {
      this.x = x;
      this.y = y;
    }
    
    public double getDist() {
      return x*x + y*y; 
    }
  }
}
