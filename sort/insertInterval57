    //time: O(N), space: O(N)
    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {
        List<Interval> result = new ArrayList<>();
        int itx = 0;
            
        // before the merge
        while (itx < intervals.size() && newInterval.start > intervals.get(itx).end){
                result.add(intervals.get(itx));
                itx++;
        }
        // merge intervals that are overlaped with newInterval
        while (itx < intervals.size() && newInterval.end >= intervals.get(itx).start){           
            newInterval.start = Math.min(newInterval.start, intervals.get(itx).start);
            newInterval.end = Math.max(newInterval.end, intervals.get(itx).end);
            itx++;
        }
        result.add(newInterval);
        
        //after the merge
        while (itx < intervals.size()){
            result.add(intervals.get(itx));
            itx++;
       }
        return result;
    }
