  //time: O(N)
    public List<Interval> merge(List<Interval> intervals) {
        List<Interval> result = new ArrayList<>();
        if (intervals == null || intervals.size() == 0) return result;
        Collections.sort(intervals, new Comparator<Interval>(){
            public int compare(Interval i1, Interval i2) {
                return i1.start - i2.start;
            } 
        });
        Interval prev = intervals.get(0);
        for (int i = 1; i < intervals.size(); i++) {
            if (intervals.get(i).start > prev.end) {
                result.add(prev);
                prev = intervals.get(i);
            } else {
                Interval newInterval = new Interval(prev.start, Math.max(prev.end, intervals.get(i).end));
                prev = newInterval;
            }
        }
        result.add(prev);
        return result;
    }
