    public int[] searchRange(int[] nums, int target) {
        int[] result = new int[2];
        Arrays.fill(result, -1);
        if (nums.length == 0) return result;
        int lo = 0, hi = nums.length -1;
        while (lo < hi) {
            int mid = lo + (hi - lo)/2;
            //we haven't find the left range
            if (nums[mid] < target) lo = mid + 1;
            //nums[mid] >= target, left range is left to mid or mid itself
            else hi = mid;
        }
        if (nums[lo] != target) return result;
        result[0] = lo;
        
        //no need to reset lo 
        hi = nums.length - 1;
        while (lo < hi) {
            //right range 
            int mid = lo + (hi - lo)/2 + 1;
            //the right range is smaller than nums[mid], so left to mid 
            if (nums[mid] > target) hi = mid - 1; 
            //nums[mid] == target, right range is right to mid or mid itself
            else lo = mid;
        }
        result[1] = lo;
        
        return result;
    }
