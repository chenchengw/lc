    //bruteforce: O(n^2)
    public int findCelebrity(int n) {
        //note we need to define j here in order to check length of j;
        for (int i = 0; i < n; i++) {
            int j = 0; 
            while(j < n) {
                //if knows(i, j) or !knows(j, i), proves i is not celebrity so break
                if ( i!= j && (knows(i, j) || !knows(j, i))) break;
                j++;
            }
            if (j == n) return i;
        }
        return -1;
    }
    
    //another solution O(n)
        public int findCelebrity(int n) {
        int candidate = 0;
        for(int i = 0; i < n; i++) {
            // if everyone before some one are not candidate, and he does not know any one after him, he is a candidate
            if (knows(candidate, i)) candidate = i;
        }
        
        for (int i = 0; i < n; i++) {
            if (candidate != i && (knows(candidate, i) || !knows(i, candidate))) return -1;
        }
        return candidate;
    }
