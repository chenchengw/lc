    public String minWindow(String s, String t) {
        int minLen = Integer.MAX_VALUE;
        String minStr = "";
        
        int[] hash = new int[256];
        
        //initialize
        int targetCnt = 0;
        for (char c: t.toCharArray()) {
            hash[c]++;
            targetCnt++;
        }
        
        int j = 0;
        int sourceCnt = 0;
        for (int i = 0; i < s.length(); i++) {
            if (hash[s.charAt(i)] > 0) {
                sourceCnt++;
            }
            //if s.charAt(i) is not a character in string t, this value is negative
            hash[s.charAt(i)]--;
            while (sourceCnt >= targetCnt) {
                if (minLen > i - j + 1) {
                    minLen = i - j + 1;
                    minStr = s.substring(j, i+1);
                }
                hash[s.charAt(j)]++;
                //both s and t contains s.charAt(j), removing it means reduce sourceCnt's value
                if (hash[s.charAt(j)] > 0) {
                    sourceCnt--;
                }
                j++;
            }
        }
        return minStr;
    }
