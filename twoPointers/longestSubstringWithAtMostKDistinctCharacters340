    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        int max = 0;
        int i = 0, j = 0;
        Map<Character, Integer> hm = new HashMap<>();
        while (i < s.length()) {
            if (hm.size() <= k) {
                hm.put(s.charAt(i), i);
                i++;       
            } 
            //note that it is not else, the condition hm.size() < k is changed after the 
            //lines executed above
            if (hm.size() > k) {
                //note this is the key to solve this problem, need to remove the leftmost character
                int leftMost = Integer.MAX_VALUE;
                for(int idx: hm.values()) {
                    leftMost = Math.min(leftMost, idx);
                }
                hm.remove(s.charAt(leftMost));
                j = leftMost + 1;
            }
            max = Math.max(max, i - j);
        }
        return max;
    }
