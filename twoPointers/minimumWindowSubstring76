   //use two hashtables
       public String minWindow(String s, String t) {
        int ans = Integer.MAX_VALUE;
        String minStr = "";
        int[] sc = new int[256];
        int[] tc = new int[256];
        for(char c: t.toCharArray()) {
            tc[c]++;
        }
        
        int j = 0;
        for (int i = 0; i < s.length(); i++) {
            while (!valid(sc, tc) && j < s.length()) {
                sc[s.charAt(j)]++;
                j++;
            }
            if (valid(sc, tc)) {
                //no need to write j -i + 1 as j increased in the while loop
                if (ans > j - i) {
                    ans = Math.min(ans, j - i);
                    minStr = s.substring(i, j);
                }
            }
            sc[s.charAt(i)]--;
        }
        return minStr;
    }
    
    boolean valid(int[] sc, int[] tc) {
        for (int i = 0; i < 256; i++) {
            //note that we use sc[i] < tc[i] as condition 
            if (sc[i] < tc[i]) return false;
        }
        return true;
    }
    
   //Use one hash table
   public String minWindow(String s, String t) {
        int minLen = Integer.MAX_VALUE;
        String minStr = "";
        
        int[] hash = new int[256];
        
        //initialize
        int targetCnt = 0;
        for (char c: t.toCharArray()) {
            hash[c]++;
            targetCnt++;
        }
        
        int j = 0;
        int sourceCnt = 0;
        for (int i = 0; i < s.length(); i++) {
            if (hash[s.charAt(i)] > 0) {
                sourceCnt++;
            }
            //if s.charAt(i) is not a character in string t, this value is negative
            hash[s.charAt(i)]--;
            while (sourceCnt >= targetCnt) {
                if (minLen > i - j + 1) {
                    minLen = i - j + 1;
                    minStr = s.substring(j, i+1);
                }
                hash[s.charAt(j)]++;
                //both s and t contains s.charAt(j), removing it means reduce sourceCnt's value
                if (hash[s.charAt(j)] > 0) {
                    sourceCnt--;
                }
                j++;
            }
        }
        return minStr;
    }
